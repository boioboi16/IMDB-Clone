{"version":3,"sources":["context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","console","log","AppContext","React","createContext","AppProvider","children","useState","isLoading","setIsLoading","show","msg","error","setError","movies","setMovies","query","setQuery","fetchMovies","url","a","fetch","response","json","data","Response","Search","Error","useEffect","Provider","value","SearchForm","useContext","action","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","Year","to","key","src","alt","Home","SingleMovie","useParams","setMovie","fetchMovie","plot","Plot","year","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68eb3d01.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\n// make sure to use https\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\nconsole.log(API_ENDPOINT);\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const[isLoading , setIsLoading] = useState(true);\n  const[error,setError] = useState({show:false,msg:''});\n  const[movies,setMovies] = useState([]);\n  const [query,setQuery] = useState('batman');\n\n  const fetchMovies= async (url) =>{\n    setIsLoading(true);\n    try{\n      const response = await fetch(url);\n      const data = await response.json();\n      //console.log(data)\n      if(data.Response === 'True'){\n        setMovies(data.Search)\n        setError({show:false,msg:''})\n      }else{\n        setError({show:true,msg:data.Error})\n      }\n      setIsLoading(false);\n    }catch(error){\n      console.log(error);\n      \n    }\n  }\n\n  useEffect(()=>{\nfetchMovies(`${API_ENDPOINT}&s=${query}`);\n  },[query])\n\n  return <AppContext.Provider value={{ isLoading,error,movies,query,setQuery}\n   }>{children}</AppContext.Provider>\n}\n// make sure use\n// export const useGlobalContext = () => {\n//   return useContext(AppContext)\n// }\n\nexport { AppContext, AppProvider }\n","import React, { useContext } from 'react'\nimport { AppContext, useGlobalContext } from './context'\nconst SearchForm = () => {\n  const {query,setQuery,error} = useContext(AppContext);\n\n  return <form action=\"\" className=\"search-form\" onSubmit={(e)=>{\n    e.preventDefault();\n  }}>\n    <h2>Search Movies</h2>\n    <input type=\"text\" className='form-input' value={query} onChange={(e)=> setQuery(e.target.value)}/>\n    {error.show && <div className='error'>{error.msg}</div>}\n  </form>\n}\n\nexport default SearchForm\n","import React, { useContext } from 'react'\nimport { AppContext, useGlobalContext } from './context'\n\nimport { Link } from 'react-router-dom'\nconst url =\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\n\nconst Movies = () => {\n   const{movies,isLoading}  = useContext(AppContext);\n \n\n   if(isLoading){\n     return <div className=\"loading\"></div>\n   }\n \n  return <section className=\"movies\">\n    {movies.map((movie)=>{\n      const{imdbID:id,Poster:poster,Title:title,Year:year} = movie;\n    \n      return <Link to = {`movies/${id}`} key={id} className='movie'>\n        <article>\n          <img src={poster === 'N/A'?url:poster} alt={title} />\n          <div className=\"movie-info\">\n            <h4 className='title'>{title}</h4>\n          </div>\n        </article>\n      </Link>\n    })}\n  </section>\n}\n\nexport default Movies\n","import React ,{useContext}from 'react'\nimport Form from './SearchForm'\nimport Movies from './Movies'\nconst Home = () => {\n  return <main>\n    <Form></Form>\n    <Movies></Movies>\n  </main>\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { API_ENDPOINT } from './context'\n\nconst SingleMovie = () => {\n  const {id} = useParams();\n  //console.log(id);\n  const[movie,setMovie] = useState({});\n  const[isLoading,setIsLoading] = useState(true);\n  const[error,setError] = useState({show:false,msg:''});\n  const fetchMovie = async (url) =>{\n    const response = await fetch(url);\n    const data = await response.json();\n    //console.log(data);\n    if(data.Response === false){\n      setError({show:true,msg:data.Error});\n    }else{\n      setMovie(data);\n      setIsLoading(false);\n    }\n  }\n  useEffect(()=>{\n    fetchMovie(`${API_ENDPOINT}&i=${id}`)\n  },[id])\n\n  if(isLoading){\nreturn <div className=\"loading\"></div>\n  }\n  if(error.show){\n    return <div className=\"page-error\">\n      <h1>{error.msg}</h1>\n      <Link to='/boioboi16/IMDB-Clone/' className='btn'>Back To Movies</Link>\n    </div>\n  }\n  const {Poster:poster,Title:title,Plot:plot,Year:year} = movie;\n  return <section className=\"single-movie\">\n    <img src={poster} alt={title} />\n<div className=\"single-movie-info\">\n  <h2>{title}</h2>\n  <p>{plot}</p>\n  <h4>{year}</h4>\n  <Link to='/boioboi16/IMDB-Clone/' className='btn'>Back To Movies</Link>\n</div>\n  </section>\n}\n\nexport default SingleMovie\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Movie from './SingleMovie'\n\nfunction App() {\n  return <Switch>\n    <Route exact path =\"/IMDB-Clone/\" exact>\n      <Home></Home>\n    </Route>\n    <Route exact path=\"/IMDB-Clone/movies/:id\" children={<Movie></Movie>}>\n\n    </Route>\n  </Switch> \n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n      <App />\n      </Router>\n     \n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}